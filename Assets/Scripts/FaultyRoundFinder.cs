using System;


public static class FaultyRoundFinder
{
	private static readonly short[] WinnersGoed =
	{
		2, 2, 2, 1, 2, 1, 0, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 0, 2, 1, 1, 2, 2, 1, 1, 1, 0, 1, 1, 2, 2, 2, 2, 1, 2, 2, 0, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 0,
		1, 2, 2, 1, 0, 2, 0, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 0, 1, 0, 2, 1, 2, 2, 2, 0, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 1, 0, 2, 2, 2, 2, 2, 1,
		2, 1, 0, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 0, 2, 1, 1, 1,
		0, 1, 0, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
		1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 0, 2, 2, 1, 1, 1, 1, 2, 2, 1, 0, 2, 2, 2, 2, 2, 2, 0, 1, 2, 0, 1, 2, 2, 0, 1, 1, 1, 2, 1, 1, 2, 1, 0, 2, 2, 1, 1,
		2, 1, 1, 0, 0, 1, 1, 1, 2, 2, 2, 1, 0, 0, 2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 0, 2, 1, 1, 2, 0, 1, 2, 2, 1, 2, 2, 2, 0, 2, 2,
		0, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 0, 2, 2, 1, 2, 0, 2, 2, 2, 2, 2, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 0, 2, 1, 1, 1, 1, 1,
		1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2,
		1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2,
		1, 1, 1, 1, 2, 1, 2, 1, 0, 2, 2, 1, 0, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 0, 1, 1, 2, 0, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
		2, 1, 1, 2, 1, 2, 2, 0, 2, 1, 1, 1, 1, 2, 1, 2, 2, 0, 2, 2, 2, 2, 1, 1, 1, 0, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1,
		2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 0, 0, 2, 2, 1, 1, 1, 2, 1, 1, 1, 0, 0, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1,
		2, 2, 2, 2, 2, 2, 1, 0, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 0, 2, 2, 2, 0, 1, 0, 1, 1, 1, 2, 1, 2, 1,
		1, 2, 0, 2, 2, 1, 0, 2, 2, 1, 0, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 0, 2, 2, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 0, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1,
		2, 2, 1, 0, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 0, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 0, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1,
		1, 0, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 0, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2,
		1, 1, 2, 2, 0, 2, 0, 2, 1, 2, 0, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 2, 1, 1, 0, 2, 2, 2, 1, 1, 2,
		1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 0, 2, 0, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 0, 2,
		1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 0, 2, 1, 2, 2, 2, 2, 2, 0, 2, 1, 2, 2, 2, 2, 1, 1, 0, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2,
		2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 0, 1, 1, 2, 0, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 0, 1, 2, 2
	};

	private static readonly short[] WinnersVoldoende =
	{
		2, 2, 2, 1, 2, 1, 0, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 0, 2, 1, 1, 2, 2, 1, 1, 1, 0, 1, 1, 2, 2, 2, 2, 1, 2, 2, 0, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 0,
		1, 2, 2, 1, 0, 2, 0, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 0, 1, 0, 2, 1, 2, 2, 2, 0, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 1, 0, 2, 2, 2, 2, 2, 1,
		2, 1, 0, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 0, 2, 1, 1, 1,
		0, 1, 0, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
		1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 0, 2, 2, 1, 1, 1, 1, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 1, 2, 0, 1, 2, 2, 0, 1, 1, 1, 2, 1, 1, 2, 1, 0, 2, 2, 1, 1,
		2, 1, 1, 0, 0, 1, 1, 1, 2, 2, 2, 1, 0, 0, 2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 0, 2, 1, 1, 2, 0, 1, 2, 2, 1, 2, 2, 2, 0, 2, 2,
		0, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 0, 2, 2, 1, 2, 0, 2, 2, 2, 2, 2, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 0, 2, 1, 1, 1, 1, 1,
		1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2,
		1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2,
		1, 1, 1, 1, 2, 1, 2, 1, 0, 2, 2, 1, 0, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 0, 1, 1, 2, 0, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
		2, 1, 1, 2, 1, 2, 2, 0, 2, 1, 1, 1, 1, 2, 1, 2, 2, 0, 2, 2, 2, 2, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1,
		2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 0, 0, 2, 2, 1, 1, 1, 2, 1, 1, 1, 0, 0, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1,
		2, 2, 2, 2, 2, 2, 1, 0, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 0, 2, 2, 1, 0, 1, 0, 1, 1, 1, 2, 1, 2, 1,
		1, 2, 0, 2, 2, 1, 0, 2, 2, 1, 0, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 0, 2, 2, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 0, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1,
		2, 2, 1, 0, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 0, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 0, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1,
		1, 0, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 0, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 0, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2,
		1, 1, 2, 2, 0, 2, 0, 2, 1, 2, 0, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 2, 1, 1, 0, 2, 2, 2, 1, 1, 2,
		1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 0, 2, 0, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 0, 2,
		1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 0, 2, 1, 2, 2, 2, 2, 2, 0, 2, 1, 2, 2, 2, 2, 1, 1, 0, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2,
		2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 0, 1, 1, 2, 0, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 0, 1, 2, 2
	};

	private static int[] input = new int[1000];

	/// <summary>
	/// Set the specific round to a winner. (0 = draw, 1 = player 1, 2 = player 2) 
	/// </summary>
	public static void SetWinner(int round, int winner)
	{
		input[round] = winner;
	}


	/// <summary>
	/// When all winners have been set, call this function to  see the result.
	/// </summary>
	/// <param name="checkGoed"></param>
	public static void Compare(bool checkGoed)
	{
		short[] answerSet = (checkGoed) ? WinnersGoed : WinnersVoldoende;
		string[] op = { "TIE", "PLAYER1", "PLAYER2" };
		int mismatchCount = 0;

		for (int i = 0; i < answerSet.Length; i++)
		{
			if (input[i] != answerSet[i])
			{
				mismatchCount++;
				string output = string.Format("Mismatch #{0} in round {1}! Correct: {2}, your input: {3}. ({4})", mismatchCount, i, answerSet[i], input[i], Poker.Game[i]);

				Console.WriteLine(output);
				UnityEngine.Debug.Log(output); // Comment this line if you don't use Unity.
			}
		}
	}
}
